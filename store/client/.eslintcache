[{"E:\\old\\kursach\\store\\client\\src\\index.js":"1","E:\\old\\kursach\\store\\client\\src\\store\\UserStore.js":"2","E:\\old\\kursach\\store\\client\\src\\App.js":"3","E:\\old\\kursach\\store\\client\\src\\store\\DeviceStore.js":"4","E:\\old\\kursach\\store\\client\\src\\http\\userAPI.js":"5","E:\\old\\kursach\\store\\client\\src\\components\\AppRouter.js":"6","E:\\old\\kursach\\store\\client\\src\\components\\NavBar.js":"7","E:\\old\\kursach\\store\\client\\src\\http\\index.js":"8","E:\\old\\kursach\\store\\client\\src\\routes.js":"9","E:\\old\\kursach\\store\\client\\src\\utils\\consts.js":"10","E:\\old\\kursach\\store\\client\\src\\pages\\Basket.js":"11","E:\\old\\kursach\\store\\client\\src\\pages\\Auth.js":"12","E:\\old\\kursach\\store\\client\\src\\pages\\DevicePage.js":"13","E:\\old\\kursach\\store\\client\\src\\pages\\Admin.js":"14","E:\\old\\kursach\\store\\client\\src\\pages\\Shop.js":"15","E:\\old\\kursach\\store\\client\\src\\http\\deviceAPI.js":"16","E:\\old\\kursach\\store\\client\\src\\components\\modals\\CreateBrand.js":"17","E:\\old\\kursach\\store\\client\\src\\components\\modals\\CreateType.js":"18","E:\\old\\kursach\\store\\client\\src\\components\\modals\\CreateDevice.js":"19","E:\\old\\kursach\\store\\client\\src\\components\\DeviceList.js":"20","E:\\old\\kursach\\store\\client\\src\\components\\TypeBar.js":"21","E:\\old\\kursach\\store\\client\\src\\components\\BrandBar.js":"22","E:\\old\\kursach\\store\\client\\src\\components\\DeviceItem.js":"23","E:\\old\\kursach\\store\\client\\src\\components\\Pages.js":"24"},{"size":413,"mtime":1623825187088,"results":"25","hashOfConfig":"26"},{"size":330,"mtime":1623848362542,"results":"27","hashOfConfig":"26"},{"size":785,"mtime":1623826932601,"results":"28","hashOfConfig":"26"},{"size":1047,"mtime":1623830804683,"results":"29","hashOfConfig":"26"},{"size":695,"mtime":1611985807000,"results":"30","hashOfConfig":"26"},{"size":795,"mtime":1611985807000,"results":"31","hashOfConfig":"26"},{"size":1457,"mtime":1623831590366,"results":"32","hashOfConfig":"26"},{"size":388,"mtime":1623825252233,"results":"33","hashOfConfig":"26"},{"size":774,"mtime":1611985807000,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1611985807000,"results":"35","hashOfConfig":"26"},{"size":101,"mtime":1623790023033,"results":"36","hashOfConfig":"26"},{"size":2350,"mtime":1623826690351,"results":"37","hashOfConfig":"26"},{"size":1865,"mtime":1623829079633,"results":"38","hashOfConfig":"26"},{"size":1280,"mtime":1623824420845,"results":"39","hashOfConfig":"26"},{"size":1248,"mtime":1623831337719,"results":"40","hashOfConfig":"26"},{"size":959,"mtime":1623828402475,"results":"41","hashOfConfig":"26"},{"size":1372,"mtime":1611985807000,"results":"42","hashOfConfig":"26"},{"size":1053,"mtime":1623824537537,"results":"43","hashOfConfig":"26"},{"size":6111,"mtime":1611985807000,"results":"44","hashOfConfig":"26"},{"size":491,"mtime":1611985807000,"results":"45","hashOfConfig":"26"},{"size":752,"mtime":1611985807000,"results":"46","hashOfConfig":"26"},{"size":759,"mtime":1611985807000,"results":"47","hashOfConfig":"26"},{"size":963,"mtime":1623832199500,"results":"48","hashOfConfig":"26"},{"size":0,"mtime":1623831329120,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"35il0i",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\old\\kursach\\store\\client\\src\\index.js",[],["106","107"],"E:\\old\\kursach\\store\\client\\src\\store\\UserStore.js",[],"E:\\old\\kursach\\store\\client\\src\\App.js",["108"],"import React, { useContext, useEffect, useState } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport AppRouter from './components/AppRouter'\nimport NavBar from './components/NavBar'\nimport { observer } from 'mobx-react-lite'\nimport { Context } from './index'\nimport { check } from './http/userAPI'\nimport { Spinner } from 'react-bootstrap'\n\nconst App = observer(() => {\n\tconst { user } = useContext(Context)\n\tconst [loading, setLoading] = useState(true)\n\n\tuseEffect(() => {\n\t\tcheck()\n\t\t\t.then(data => {\n\t\t\t\tuser.setUser(true)\n\t\t\t\tuser.setIsAuth(true)\n\t\t\t})\n\t\t\t.finally(() => setLoading(false))\n\t}, [])\n\n\tif (loading) {\n\t\treturn <Spinner animation={'grow'} />\n\t}\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<NavBar />\n\t\t\t<AppRouter />\n\t\t</BrowserRouter>\n\t)\n})\n\nexport default App\n","E:\\old\\kursach\\store\\client\\src\\store\\DeviceStore.js",[],"E:\\old\\kursach\\store\\client\\src\\http\\userAPI.js",[],"E:\\old\\kursach\\store\\client\\src\\components\\AppRouter.js",[],"E:\\old\\kursach\\store\\client\\src\\components\\NavBar.js",[],"E:\\old\\kursach\\store\\client\\src\\http\\index.js",[],"E:\\old\\kursach\\store\\client\\src\\routes.js",[],"E:\\old\\kursach\\store\\client\\src\\utils\\consts.js",[],"E:\\old\\kursach\\store\\client\\src\\pages\\Basket.js",[],"E:\\old\\kursach\\store\\client\\src\\pages\\Auth.js",["109"],"import React, { useContext, useState } from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport { NavLink, useLocation, useHistory } from 'react-router-dom'\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from '../utils/consts'\nimport { login, registration } from '../http/userAPI'\nimport { observer } from 'mobx-react-lite'\nimport { Context } from '../index'\n\nconst Auth = observer(() => {\n\tconst { user } = useContext(Context)\n\tconst location = useLocation()\n\tconst history = useHistory()\n\tconst isLogin = location.pathname === LOGIN_ROUTE\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst click = async () => {\n\t\ttry {\n\t\t\tlet data\n\t\t\tif (isLogin) {\n\t\t\t\tdata = await login(email, password)\n\t\t\t} else {\n\t\t\t\tdata = await registration(email, password)\n\t\t\t}\n\t\t\tuser.setUser(user)\n\t\t\tuser.setIsAuth(true)\n\t\t\thistory.push(SHOP_ROUTE)\n\t\t} catch (e) {\n\t\t\talert(e.response.data.message)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Container\n\t\t\tclassName='d-flex justify-content-center align-items-center'\n\t\t\tstyle={{ height: window.innerHeight - 54 }}\n\t\t>\n\t\t\t<Card style={{ width: 600 }} className='p-5'>\n\t\t\t\t<h2 className='m-auto'>{isLogin ? 'Авторизация' : 'Регистрация'}</h2>\n\t\t\t\t<Form className='d-flex flex-column'>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName='mt-3'\n\t\t\t\t\t\tplaceholder='Введите ваш email...'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName='mt-3'\n\t\t\t\t\t\tplaceholder='Введите ваш пароль...'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t/>\n\t\t\t\t\t<Row className='d-flex justify-content-between mt-3 pl-3 pr-3'>\n\t\t\t\t\t\t{isLogin ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tНет аккаунта?{' '}\n\t\t\t\t\t\t\t\t<NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tЕсть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button variant={'outline-success'} onClick={click}>\n\t\t\t\t\t\t\t{isLogin ? 'Войти' : 'Регистрация'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t</Container>\n\t)\n})\n\nexport default Auth\n","E:\\old\\kursach\\store\\client\\src\\pages\\DevicePage.js",["110"],"import React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap'\nimport bigStar from '../assets/bigStar.png'\nimport { useParams } from 'react-router-dom'\nimport { fetchOneDevice } from '../http/deviceAPI'\n\nconst DevicePage = () => {\n\tconst [device, setDevice] = useState({ info: [] })\n\tconst { id } = useParams()\n\n\tuseEffect(() => {\n\t\tfetchOneDevice(id).then(data => setDevice(data))\n\t}, [])\n\treturn (\n\t\t<Container className='mt-3'>\n\t\t\t<Row>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\theight={300}\n\t\t\t\t\t\tsrc={process.env.REACT_APP_API_URL + device.img}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Row className='d-flex flex-column align-items-center'>\n\t\t\t\t\t\t<h2>{device.name}</h2>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='d-flex align-items-center justify-content-center'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: `url(${bigStar}) no-repeat center center`,\n\t\t\t\t\t\t\t\twidth: 240,\n\t\t\t\t\t\t\t\theight: 240,\n\t\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\t\tfontSize: 64,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{device.rating}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tclassName='d-flex flex-column align-items-center justify-content-around'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t\t\theight: 300,\n\t\t\t\t\t\t\tfontSize: 32,\n\t\t\t\t\t\t\tborder: '5px solid lightgray',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h3>От: {device.price} руб.</h3>\n\t\t\t\t\t\t<Button variant={'outline-dark'}>Добавить в корзину</Button>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className='d-flex flex-column m-3'>\n\t\t\t\t<h1>Характеристики</h1>\n\t\t\t\t{device.info.map((info, index) => (\n\t\t\t\t\t<Row\n\t\t\t\t\t\tkey={info.id}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: index % 2 === 0 ? 'lightgray' : 'transpare',\n\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{info.title}: {info.description}\n\t\t\t\t\t</Row>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default DevicePage\n","E:\\old\\kursach\\store\\client\\src\\pages\\Admin.js",[],"E:\\old\\kursach\\store\\client\\src\\pages\\Shop.js",["111","112","113"],"E:\\old\\kursach\\store\\client\\src\\http\\deviceAPI.js",["114"],"import { $authHost, $host } from './index'\nimport jwt_decode from 'jwt-decode'\n\nexport const createType = async type => {\n\tconst { data } = await $authHost.post('api/type', type)\n\treturn data\n}\n\nexport const fetchTypes = async () => {\n\tconst { data } = await $host.get('api/type')\n\treturn data\n}\n\nexport const createBrand = async brand => {\n\tconst { data } = await $authHost.post('api/brand', brand)\n\treturn data\n}\n\nexport const fetchBrands = async () => {\n\tconst { data } = await $host.get('api/brand')\n\treturn data\n}\n\nexport const createDevice = async device => {\n\tconst { data } = await $authHost.post('api/device', device)\n\treturn data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit = 5) => {\n\tconst { data } = await $host.get('api/device', {\n\t\tparams: {\n\t\t\ttypeId,\n\t\t\tbrandId,\n\t\t\tpage,\n\t\t\tlimit,\n\t\t},\n\t})\n\treturn data\n}\n\nexport const fetchOneDevice = async id => {\n\tconst { data } = await $host.get('api/device/' + id)\n\treturn data\n}\n","E:\\old\\kursach\\store\\client\\src\\components\\modals\\CreateBrand.js",["115"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","E:\\old\\kursach\\store\\client\\src\\components\\modals\\CreateType.js",[],"E:\\old\\kursach\\store\\client\\src\\components\\modals\\CreateDevice.js",["116","117"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","E:\\old\\kursach\\store\\client\\src\\components\\DeviceList.js",[],"E:\\old\\kursach\\store\\client\\src\\components\\TypeBar.js",["118"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","E:\\old\\kursach\\store\\client\\src\\components\\BrandBar.js",[],"E:\\old\\kursach\\store\\client\\src\\components\\DeviceItem.js",[],"E:\\old\\kursach\\store\\client\\src\\components\\Pages.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":5,"nodeType":"125","endLine":21,"endColumn":7,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":26,"column":5,"nodeType":"129","messageId":"130","endLine":26,"endColumn":9},{"ruleId":"123","severity":1,"message":"131","line":13,"column":5,"nodeType":"125","endLine":13,"endColumn":7,"suggestions":"132"},{"ruleId":"127","severity":1,"message":"133","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":13},{"ruleId":"123","severity":1,"message":"134","line":20,"column":5,"nodeType":"125","endLine":20,"endColumn":7,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"134","line":32,"column":5,"nodeType":"125","endLine":32,"endColumn":61,"suggestions":"136"},{"ruleId":"127","severity":1,"message":"137","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"138","line":4,"column":22,"nodeType":"129","messageId":"130","endLine":4,"endColumn":32},{"ruleId":"127","severity":1,"message":"139","line":5,"column":36,"nodeType":"129","messageId":"130","endLine":5,"endColumn":48},{"ruleId":"123","severity":1,"message":"134","line":18,"column":8,"nodeType":"125","endLine":18,"endColumn":10,"suggestions":"140"},{"ruleId":"127","severity":1,"message":"141","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":11},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["145"],"'Pages' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["146"],["147"],"'jwt_decode' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["148"],"'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"153","fix":"157"},"Update the dependencies array to be: [user]",{"range":"158","text":"159"},"Update the dependencies array to be: [id]",{"range":"160","text":"161"},"Update the dependencies array to be: [device]",{"range":"162","text":"163"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"164","text":"165"},{"range":"166","text":"163"},[616,618],"[user]",[449,451],"[id]",[764,766],"[device]",[976,1032],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]